
class Tasks:

    def icmp_ping(self):
        """
        Ping an IP range and collect IP addresses of the hosts that are alive and save the result in icmp.dat.
        """

    def port_identification(self):
        """
        1) Get the IP addresses from the icmp.dat file and scan and validate these IP addresses.
        If an IP address is a valid live host address append it to a string or list (live hosts) that will contain the
        IP addresses of the live hosts. A live host is an active host that can be monitored by nmap or Wireshark.

        2) Now perform port scan on the live hosts. The scanning must find and identify ports on each host and save the
        results in openPorts.dat. This text file will contain Host IPs, ports numbers, and service/application names
        (if any) of each port.
        """

    def os_fingerprint_identification(self):
        """
        This function will get the host IPs from the text file (openPorts.dat) and identify operating systems (OS) and
        OS versions of the hosts.
        """

    def web_server_detection(self):
        """
        Scan the Internet and discover 10 web-server addresses, protocols, and ports of each web server.
        Save the results in web.dat.
        """

    def syn_flood(self):
        """
        This function will launch SYN-flood attack to a given destination (IP) and port(s).
        This tool must also enable you to choose the number of flooding, e.g., 10.000 SYN attacks.
        While running the SYN-flood attack use some Python codes to capture and decode TCP and IP packet headers and
        save them in SYNresults.txt. If you want, you can also use Wireshark or tcpdump to capture the attack packets
        and save the packets to a pcap file. Thereafter, use a Python code to decode and save the results.
        """

    def show(self):
        """
        This function will ask and display the contents of the files that your tools have created so far.
        """


if __name__ == '__main__':
    pass
